// Generated by CoffeeScript 1.4.0
(function() {
  var alert_func, exports, remove_xml_spaces;

  remove_xml_spaces = function(xml_str) {
    xml_str = xml_str.trim();
    xml_str = xml_str.replace(/>\s+/, ">");
    xml_str = xml_str.replace(/\s+</, "<");
    xml_str = xml_str.replace(/"\s+/, "\" ");
    xml_str = xml_str.replace(/\s+"/, " \"");
    xml_str = xml_str.replace(/'\s+/, "' ");
    return xml_str = xml_str.replace(/\s+'/, " '");
  };

  alert_func = function(jqXHR, status, error) {
    var str;
    str = status + " : " + error + jqXHR.responseText;
    alert(str);
    return console.log(str);
  };

  QUnit.test("translate_request test", function(assert) {
    var conn, diag, done, expected;
    expected = '<?xml version="1.0" encoding="UTF-8"?>\
<RequestMessage xmlns="http://www.owllink.org/owllink#" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.owllink.org/owllink# http://www.owllink.org/owllink-20091116.xsd"><CreateKB kb="http://localhost/kb1"/><Tell kb="http://localhost/kb1"><owl:SubClassOf><owl:Class IRI="Hi World"/><owl:Class abbreviatedIRI="owl:Thing"/></owl:SubClassOf></Tell><IsKBSatisfiable kb="http://localhost/kb1"/><IsClassSatisfiable kb="http://localhost/kb1"><owl:Class IRI="Hi World"/></IsClassSatisfiable></RequestMessage>';
    expected = remove_xml_spaces(expected);
    conn = new ServerConnection(alert_func);
    conn.set_urlprefix("../../web-src/");
    diag = new Diagram(null);
    diag.agregar_clase(new Class("Hi World"));
    done = assert.async();
    return conn.request_translation(JSON.stringify(diag.to_json()), "owllink", function(data) {
      var actual;
      actual = remove_xml_spaces(data);
      assert.equal(actual, expected, "Simple class");
      return done();
    });
  });

  QUnit.test("satisfiable_request test", function(assert) {
    var conn, diag, done, expected;
    expected = {
      satisfiable: {
        kb: true,
        classes: ["Hi World"]
      },
      unsatisfiable: {
        classes: []
      },
      suggestions: {
        links: []
      },
      reasoner: {
        input: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<RequestMessage xmlns=\"http:\/\/www.owllink.org\/owllink#\" xmlns:owl=\"http:\/\/www.w3.org\/2002\/07\/owl#\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.owllink.org\/owllink# http:\/\/www.owllink.org\/owllink-20091116.xsd\"><CreateKB kb=\"http:\/\/localhost\/kb1\"\/><Tell kb=\"http:\/\/localhost\/kb1\"><owl:SubClassOf><owl:Class IRI=\"Hi World\"\/><owl:Class abbreviatedIRI=\"owl:Thing\"\/><\/owl:SubClassOf><\/Tell><IsKBSatisfiable kb=\"http:\/\/localhost\/kb1\"\/><IsClassSatisfiable kb=\"http:\/\/localhost\/kb1\"><owl:Class IRI=\"Hi World\"\/><\/IsClassSatisfiable><\/RequestMessage>",
        output: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><ResponseMessage xmlns=\"http:\/\/www.owllink.org\/owllink#\"                 xmlns:owl=\"http:\/\/www.w3.org\/2002\/07\/owl#\">  <KB kb=\"http:\/\/localhost\/kb1\"\/>  <OK\/>  <BooleanResponse result=\"true\"\/>  <BooleanResponse result=\"true\"\/><\/ResponseMessage>"
      }
    };
    conn = new ServerConnection(alert_func);
    conn.set_urlprefix("../../web-src/");
    diag = new Diagram(null);
    diag.agregar_clase(new Class("Hi World"));
    done = assert.async();
    return conn.request_satisfiable(JSON.stringify(diag.to_json()), function(data) {
      var actual;
      actual = JSON.parse(data);
      assert.propEqual(actual, expected, "Simple class");
      return done();
    });
  });

  exports = exports != null ? exports : this;

  exports.alert_func = alert_func;

}).call(this);
