// Generated by CoffeeScript 1.10.0
(function() {
  QUnit.test("diag.delete_class", function(assert) {
    var actual, c, diag, expected;
    expected = 2;
    diag = new model.uml.UMLDiagram();
    c = new model.uml.Class("hi world");
    diag.agregar_clase(new model.uml.Class("Class1"));
    diag.agregar_clase(c);
    diag.agregar_clase(new model.uml.Class("Class1"));
    diag.delete_class(c);
    actual = diag.get_clases().length;
    return assert.equal(actual, expected, "Passed!");
  });

  QUnit.test("diag.delete_by_name", function(assert) {
    var actual, c, diag, expected;
    expected = 2;
    diag = new model.uml.UMLDiagram();
    c = new model.uml.Class("hi world");
    diag.agregar_clase(new model.uml.Class("Class1"));
    diag.agregar_clase(c);
    diag.agregar_clase(new model.uml.Class("Class2"));
    diag.delete_class_by_name("hi world");
    actual = diag.get_clases().length;
    return assert.equal(actual, expected, "Passed!");
  });

  QUnit.test("diag.delete_by_classid", function(assert) {
    var actual, c, c1, c2, classid, diag, expected, fact, graph;
    expected = 2;
    diag = new model.uml.UMLDiagram();
    fact = new model.uml.UMLFactory();
    graph = new joint.dia.Graph();
    c1 = new model.uml.Class("Class1");
    c = new model.uml.Class("hi world");
    c2 = new model.uml.Class("Class2");
    c1.create_joint(fact);
    c.create_joint(fact);
    c2.create_joint(fact);
    classid = c.get_classid();
    diag.agregar_clase(c1);
    diag.agregar_clase(c);
    diag.agregar_clase(c2);
    diag.delete_class_by_classid(classid);
    actual = diag.get_clases().length;
    return assert.equal(actual, expected, "Passed!");
  });

}).call(this);
